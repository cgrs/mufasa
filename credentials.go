package main

import (
	"fmt"
	"strings"
	"time"

	"github.com/aws/aws-sdk-go-v2/service/sts/types"
)

type OutputCredentials struct {
	AWSAccessKeyID     string
	AWSSecretAccessKey string
	Expiration         time.Time
	AWSSessionToken    string
}

func FromCredentials(c *types.Credentials) *OutputCredentials {
	o := new(OutputCredentials)
	o.AWSAccessKeyID = *c.AccessKeyId
	o.AWSSecretAccessKey = *c.SecretAccessKey
	o.Expiration = *c.Expiration
	o.AWSSessionToken = *c.SessionToken
	return o
}

func (o *OutputCredentials) ToMap() map[string]string {
	return map[string]string{
		"aws_access_key_id":     o.AWSAccessKeyID,
		"aws_secret_access_key": o.AWSSecretAccessKey,
		"aws_session_token":     o.AWSSessionToken,
	}
}

func (o *OutputCredentials) ToINI(prefix string) string {
	if prefix == "" {
		prefix = "mfa"
	}
	m := o.ToMap()
	sb := new(strings.Builder)
	sb.WriteString("; start of autogenerated section by mufasa, do not edit manually!\n")
	sb.WriteString(fmt.Sprintf("[%s]\n", prefix))
	for k, v := range m {
		sb.WriteString(fmt.Sprintf("%s = %s\n", k, v))
	}
	sb.WriteString(fmt.Sprintf("; expiration = %s\n", o.Expiration))
	sb.WriteString("; end of autogenerated section by mufasa\n")
	return sb.String()
}
